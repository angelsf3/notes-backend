{"version":3,"sources":["components/Note.js","services/Notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","changeNote","returnedNote","catch","error","alert","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"+KAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACjB,qBAAuB,iBAEzB,OACE,+BACGH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,Q,gBCPpCI,EAAU,aAkBD,EAhBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC8D9BK,EA3EH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAAS,iBAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGgBJ,oBAAS,GAHzB,mBAGPK,EAHO,KAGEC,EAHF,KAKdC,qBAAU,WACNC,IAEKhB,MAAK,SAAAiB,GAAY,OAAIP,EAASO,QACpC,IAEH,IAAMC,EAAcL,EAChBJ,EAAQA,EAAMU,QAAO,SAAA5B,GAAI,OAAuB,IAAnBA,EAAKG,aAmCtC,OACA,gCACE,uCACE,8BACI,yBAAQE,QAAS,kBAAMkB,GAAYD,IAAnC,kBACUA,EAAU,YAAc,WAGxC,6BACGK,EAAYE,KAAI,SAAA7B,GAAI,OACjB,cAAC,EAAD,CAEIA,KAAMA,EACNC,iBAAkB,kBA9BH,SAACa,GACxB,IAAMd,EAAOkB,EAAMY,MAAK,SAAAC,GAAC,OAAIA,EAAEjB,KAAOA,KAChCkB,EAAU,2BAAQhC,GAAR,IAAcG,WAAYH,EAAKG,YAE/CsB,EACYX,EAAIkB,GACXvB,MAAK,SAAAwB,GACFd,EAASD,EAAMW,KAAI,SAAA7B,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAOiC,SAEtDC,OAAM,SAAAC,GACHC,MAAM,aAAD,OAAcpC,EAAKI,QAAnB,sCACLe,EAASD,EAAMU,QAAO,SAAAG,GAAC,OAAIA,EAAEjB,KAAOA,SAmBZuB,CAAmBrC,EAAKc,MAF3Cd,EAAKc,SAMlB,uBAAMwB,SAlDM,SAACC,GACbA,EAAMC,iBAEN,IAAMC,EAAa,CACfrC,QAASgB,EACTsB,MAAM,IAAIC,MAAOC,cACjBzC,UAAW0C,KAAKC,SAAW,IAG/BrB,EAAmBgB,GACdhC,MAAK,SAACwB,GACHd,EAASD,EAAM6B,OAAOd,IACtBZ,EAAW,QAsCnB,UACI,uBACI2B,MAAO5B,EACP6B,SAtBa,SAACV,GAAD,OAAWlB,EAAWkB,EAAMW,OAAOF,UAwBpD,wBAAQG,KAAK,SAAb,yBCtEZC,IAASC,OACP,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.c1833243.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n  ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }\r\n","import React, {useEffect, useState} from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/Notes'\r\n\r\nconst App = () => {\r\n    const [notes, setNotes] = useState([])\r\n    const [newNote, setNewNote] = useState('a new note...')\r\n    const [showAll, setShowAll] = useState(true)\r\n\r\n    useEffect(() => {\r\n        noteService\r\n            .getAll()\r\n            .then(initialNotes => setNotes(initialNotes))\r\n    }, [])\r\n\r\n    const notesToShow = showAll ?\r\n        notes : notes.filter(note => note.important === true)\r\n\r\n    const addNote = (event) => {\r\n        event.preventDefault()\r\n\r\n        const noteObject = {\r\n            content: newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() < 0.5,\r\n        }\r\n\r\n        noteService.create(noteObject)\r\n            .then((returnedNote) => {\r\n                setNotes(notes.concat(returnedNote))\r\n                setNewNote('')\r\n            })\r\n    }\r\n\r\n    const toggleImportanceOf = (id) => {\r\n        const note = notes.find(n => n.id === id)\r\n        const changeNote = { ...note, important: !note.important }\r\n\r\n        noteService\r\n            .update(id, changeNote)\r\n            .then(returnedNote => {\r\n                setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n            })\r\n            .catch(error => {\r\n                alert(`the note '${note.content}' was already deleted from server`)\r\n                setNotes(notes.filter(n => n.id !== id))\r\n            })\r\n    }\r\n\r\n    const handleNoteChange = (event) => setNewNote(event.target.value)\r\n\r\n    return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n        <div>\r\n            <button onClick={() => setShowAll(!showAll)}>\r\n                show {showAll ? 'important' : 'all'}\r\n            </button>\r\n        </div>\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n            <Note\r\n                key={note.id}\r\n                note={note}\r\n                toggleImportance={() => toggleImportanceOf(note.id)}\r\n            />\r\n        )}\r\n      </ul>\r\n        <form onSubmit={addNote}>\r\n            <input\r\n                value={newNote}\r\n                onChange={handleNoteChange}\r\n            />\r\n            <button type=\"submit\">save</button>\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\n\r\nReactDOM.render(\r\n  <App/>, document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}